// Generated by CoffeeScript 1.6.2
(function() {
  var Decorable, bindable, flatstack, type,
    __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

  bindable = require("bindable");

  flatstack = require("flatstack");

  type = require("type-component");

  Decorable = (function(_super) {
    __extends(Decorable, _super);

    /*
    */


    function Decorable(context) {
      Decorable.__super__.constructor.call(this, context);
      this.callstack = flatstack();
    }

    /*
     initializes the decorators
    */


    Decorable.prototype.initDecorators = function() {
      return this.decor.decorate(this);
    };

    /*
    */


    Decorable.prototype.decorate = function(options) {
      this.__decorators = void 0;
      return this.decor.decorate(this, options);
    };

    /*
    */


    Decorable.prototype.call = function(startEvent, endEvent, next) {
      var endState, startState,
        _this = this;

      if (type(next) !== "function") {
        next = function() {};
      }
      startState = "states." + startEvent;
      endState = "states." + endEvent;
      return this.callstack.push(function() {
        _this.emit(startEvent);
        _this.set(startState, true);
        return _this.callstack.push(function() {
          _this.emit(endEvent);
          _this.set(endState, true);
          return next();
        });
      });
    };

    return Decorable;

  })(bindable.Object);

  module.exports = Decorable;

}).call(this);
